.ig
 * Bu kılavuz sayfası Türkçe Linux Belgelendirme Projesi (TLBP) tarafından
 * XML belgelerden derlenmiş olup manpages-tr paketinin parçasıdır:
 * https://github.com/TLBP/manpages-tr
 *
 * Özgün Belgenin Lisans ve Telif Hakkı bilgileri:
 *
 * badblocks.c          - Bad blocks checker
 *
 * Copyright (C) 1992, 1993, 1994  Remy Card (card@masi.ibp.fr)
 *                                 Laboratoire MASI, Institut Blaise Pascal
 *                                 Universite Pierre et Marie Curie (Paris VI)
 *
 * Copyright 1995, 1996, 1997, 1998, 1999 by Theodore Ts’o
 * Copyright 1999 by David Beattie
 *
 * This file is based on the minix file system programs fsck and mkfs
 * written and copyrighted by Linus Torvalds (Linus.Torvalds@cs.helsinki.fi)
 *
 * This file may be redistributed under the terms of the GNU Public License.
 *
..
.\" Derlenme zamanı: 2022-12-08T19:24:11+03:00
.TH "BADBLOCKS" 8 "Aralık 2021" "E2fsprogs 1.46.5" "Sistem Yönetim Komutları"
.\" Sözcükleri ilgisiz yerlerden bölme (disable hyphenation)
.nh
.\" Sözcükleri yayma, sadece sola yanaştır (disable justification)
.ad l
.PD 0
.SH İSİM
badblocks - aygıtı bozuk blokları bulmak için tarar
.sp
.SH KULLANIM
.IP \fBbadblocks\fR 10
[ \fB-svwnfBX\fR ] [ \fB-b\fR \fIblokboyu\fR ] [ \fB-c\fR \fIbloksayısı\fR ] [ \fB-d\fR \fIçarpan\fR ] [ \fB-e\fR \fIazmbloksayısı\fR ] [ \fB-i\fR \fIgirdidosyası\fR ] [ \fB-o\fR \fIçıktıdosyası\fR ] [ \fB-p\fR \fItaramasayısı\fR ] [ \fB-t\fR \fIşablon\fR ] \fIaygıt\fR [ \fIsonblok\fR ] [ \fIilkblok\fR ]
.sp
.PP
.sp
.SH "AÇIKLAMA"
\fBbadblocks\fR, bir aygıt (genellikle bir disk bölümü) üzerinde bulunan bozuk blokları aramak için kullanılır. \fIaygıt\fR, \fI/dev/sdc1\fR gibi bir aygıtı gösteren özel bir dosyadır. \fIsonblok\fR ise sınanacak en son bloktur. Belirtilmezse öntanımlı olarak aygıt üzerindeki son blok kullanılır. \fIilkblok\fR sınamanın başlatılacağı ilk bloğu gösteren isteğe bağlı bir girdidir. Bu girdi sınamaya diskin ortasından başlayabilme esnekliği sağlar. Eğer belirtilmezse öntanımlı olarak disk üzerindeki ilk blok kullanılır.
.sp
.TP 4
\fBÖnemli bilgi\fR
Eğer \fBbadblocks\fR komutunun çıktısı \fBe2fsck\fR(8) ya da \fBmke2fs\fR(8)’e yönlendirilecekse blok boyunun gerektiği biçimde belirtilmesi önemlidir, çünkü üretilen blok sayısı dosya sisteminde kullanılan blok boyuna çok bağlıdır. Bu sebepten kullanıcının \fBbadblocks\fR komutu yerine \fBe2fsck\fR(8) ve \fBmke2fs\fR(8)’i \fB-c\fR seçeneğiyle kullanması şiddetle önerilir.
.sp
.PP
.sp
.SH "SEÇENEKLER"
.TP 4
\fB-b\fR \fIblokboyu\fR
Blok uzunluğu bayt cinsinden belirtilir. 1024 öntanımlıdır.
.sp
.TP 4
\fB-c\fR \fIbloksayısı\fR
Bir kerede sınanacak blok sayısı belirtilir. 64 öntanımlıdır.
.sp
.TP 4
\fB-d\fR \fIçarpan\fR
Belirtilen sıfırdan farklı bir değer, okuma işleminde bir hata oluşmamışsa hatalı blokların okumalar arasında uyumasına sebep olur. Gecikme, okuma işleminin gerçekleşeceği sürenin yüzdesi olarak hesaplanır. Başka bir deyişle, 100 değeri her okumanın önceki okumanın gerçekleştiği süre kadar geciktirileceği, 200 ise bunun iki katına çıkacağı anlamına gelir.
.sp
.TP 4
\fB-e\fR \fIazmbloksayısı\fR
Sınamadan çıkılmadan önceki hatalı azami blok sayısını belirler. 0 değeri, sınama aralığına ulaşana kadar sınamanın devam edeceği anlamına gelir.
.sp
.TP 4
\fB-f\fR
Normalde, \fBbadblocks\fR bağlanmış bir aygıt üzerinde oku/yaz sınaması ya da zararsız yazma sınaması yapmayı reddeder. Çünkü her ikisi de sistemin çökmesine hatta salt-okunur biçimde bağlanmış dahi olsa dosya sisteminin zarar görmesine neden olabilir. Eğer \fBbadblocks\fR’tan daha akıllı olduğunuzu düşünüyorsanız ki neredeyse böyle bir şey imkansızdır, bu güçlük \fB–f\fR seçeneği kullanılarak aşılabilir, ancak bu seçeneği kullanmaktan mümkün olduğunca kaçınmak gerekir. Bu seçeneğin kullanılabileceği güvenli tek durum, \fI/etc/mtab\fR dosyasının yanlış olduğu ve aygıtın gerçekte bağlı olmadığı durumdur.
.sp
.TP 4
\fB-i\fR \fIgirdidosyası\fR
Zaten varolan bozuk blokların listesini okur. \fBbadblocks\fR komutu bu blokları sınamadan atlayacaktır. Çünkü bunlar zaten bozuk olduğu bilinen bloklardır. \fIgirdidosyası\fR yerine "-" yazılırsa liste standart girdiden okunacaktır. Standart çıktıya ya da çıktı dosyasına yazılacak yeni bozuk bloklar listesinde bu listede belirtilen bloklar görünmeyecektir. Sınamaya başlamadan önce bozuk olduğu bilinen blokların listesini bu seçenekte kullanılabilecek biçimde \fBdumpe2fs\fR(8) komutunun \fB–b\fR seçeneği ile alabilirsiniz.
.sp
.TP 4
\fB-n\fR
Zararsız oku/yaz kipi kullanılır. Öntanımlı olarak yalnızca bir zararsız salt-okunur sınama yapılır. Yıkıcı okuma/yazma yapan \fB-w\fR seçeneğiyle birlikte asla kullanılmamalıdır.
.sp
.TP 4
\fB-o\fR \fIçıktıdosyası\fR
Bozuk blokların listesini belirtilen dosyaya yazar. Bu seçenek verilmezse bozuk bloklar standart çıktıda listelenir. Bu dosyanın biçimi \fBe2fsck\fR(8) ya da \fBmke2fs\fR(8) komutunun \fB–l\fR seçeneğiyle kullanılmaya uygundur.
.sp
.TP 4
\fB-p\fR \fItaramasayısı\fR
Bozuk blok kalmayıncaya kadar diskin kaç kere taranacağı belirtilir. Öntanımlı değeri sıfırdır. Yani bu seçenek belirtilmezse disk sadece bir defa taranır.
.sp
.TP 4
\fB-s\fR
Disk üzerinde geçilen mevcut hatalı blokların kabaca tamamlanma yüzdesini yazarak taramanın ilerlemesini gösterir. Özellikle kullanıcı \fB-p\fR veya \fB-w\fR seçeneğini de belirtmişse, hatalı bloklar için disk üzerinde birden fazla sınama geçişi yapabileceği unutulmamalıdır.
.sp
.TP 4
\fB-t\fR \fIşablon\fR
Disk blokları üzerinde yazılıp okunacak sınama \fIşablon\fRunu belirler. \fIşablon\fR, 0 ile \fBULONG_MAX\fR-1 (dahil) arasında bir sayısal değer veya bloğun rastgele bitlerle doldurulması gerektiğini belirten "random" sözcüğü olabilir. Yıkıcı oku/yaz (\fB-w\fR) ve zararsız oku/yaz (\fB-n\fR) kipleri için, istenen her \fIşablon\fR ayrı bir \fB-t\fR seçeneği ile belirtilebilir. Salt-okunur kip için yalnızca tek bir \fIşablon\fR belirtilebilir ve bu "random" olamaz. Salt-okunur sınamada, belirtilen \fIşablon\fRun daha önce diske yazıldığı varsayılır - aksi takdirde, çok sayıda blok doğrulamada başarısız olur. Birden fazla \fIşablon\fR belirtilirse, bir sonraki \fIşablon\fRa geçmeden önce tüm bloklar tek bir \fIşablon\fR ile sınanır.
.sp
.TP 4
\fB-v\fR
Ayrıntı kipi. Okuma ve yazma hatası sayısı ile veri kaybı standart hataya yazılır.
.sp
.TP 4
\fB-w\fR
Yıkıcı yazma kipi kullanılır. Bu seçenekle, \fBbadblocks\fR bozuk blokları bulurken bloğa bir dizge (0xaa, 0x55, 0xff, 0x00) yazar ve sonra bu dizgeyi aynı bloktan okuyup sonucu karşılaştırır. Bu seçenek zararsız oku-yaz kipinin kullanılmasını sağlayan \fB-n\fR seçeneği ile birlikte asla kullanılmamalıdır.
.sp
.TP 4
\fB-B\fR
Tamponlu G/Ç kullanılır. Mümkün olsa bile doğrudan G/Ç kullanılmaz.
.sp
.TP 4
\fB-X\fR
\fBe2fsck\fR(8) ve \fBmke2fs\fR(8) tarafından dahili olarak kullanılır. Dahili olarak kullanılan ayrıcalıklı kipte aygıt güvenlik sınamasını atlar.
.sp
.PP
.sp
.SH "UYARI"
\fB-w\fR seçeneği, üzerinde bir dosya sistemi olan bir disk üzerinde asla kullanılmamalıdır. Bu seçenek verileri siler! Bir dosya sistemi üzerinde yazma sınaması yapılmak istenirse \fB–n\fR seçeneği kullanılmalıdır. Bu seçenek verildiğinde işlem daha yavaştır ama diskteki veri korunur.
.sp
\fB-e\fR seçeneği, bozuk blok listesinin tamamlanmadan çıktılanmasına sebep olabilir. Bu nedenle, bozuk blokların listesi istendiğinde değil, yalnızca aygıtta herhangi bir bozuk blok olup olmadığı bilinmek istendiğinde kullanılması önerilir.
.sp
.SH "YAZAN"
\fBbadblocks\fR, Remy Card tarafından yazılmıştır. Şu andaki sorumlusu: Theodore Ts’o. Zararsız okuma-yazma sınaması David Beattie tarafından gerçeklenmiştir.
.sp
.SH "YARARLANIM"
\fBbadblocks\fR, e2fsprogs paketinin bir parçasıdır ve http://e2fsprogs.sourceforge.net adresinden elde edilebilir.
.sp
.SH "İLGİLİ BELGELER"
\fBe2fsck\fR(8), \fBmke2fs\fR(8).
.sp
.SH "ÇEVİREN"
© 2004 Serpil Vuran
.br
© 2022 Nilgün Belma Bugüner
.br
Bu çeviri özgür yazılımdır: Yasaların izin verdiği ölçüde HİÇBİR GARANTİ YOKTUR.
.br
Lütfen, çeviri ile ilgili bildirimde bulunmak veya çeviri yapmak için https://github.com/TLBP/manpages-tr/issues adresinde "New Issue" düğmesine tıklayıp yeni bir konu açınız ve isteğinizi belirtiniz.
.sp

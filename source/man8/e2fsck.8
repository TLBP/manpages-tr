.ig
 * Bu kılavuz sayfası Türkçe Linux Belgelendirme Projesi (TLBP) tarafından
 * XML belgelerden derlenmiş olup manpages-tr paketinin parçasıdır:
 * https://github.com/TLBP/manpages-tr
 *
 * Özgün Belgenin Lisans ve Telif Hakkı bilgileri:
 *
 * Copyright 1993, 1994, 1995 by Theodore Ts’o. *
 * This file may be redistributed under the terms of the GNU Public License.
 *
..
.\" Derlenme zamanı: 2023-01-21T21:03:33+03:00
.TH "E2FSCK" 8 "Aralık 2021" "E2fsprogs 1.46.5" "Sistem Yönetim Komutları"
.\" Sözcükleri ilgisiz yerlerden bölme (disable hyphenation)
.nh
.\" Sözcükleri yayma, sadece sola yanaştır (disable justification)
.ad l
.PD 0
.SH İSİM
e2fsck - Linux ext2/ext3/ext4 dosya sistemini denetler
.br
fsck.ext2 - Linux ext2 dosya sistemini denetler
.br
fsck.ext3 - Linux ext3 dosya sistemini denetler
.br
fsck.ext4 - Linux ext4 dosya sistemini denetler
.sp
.SH KULLANIM 
.IP \fBe2fsck\fR 7
[ \fB-pacnyrdfkvtDFV\fR ] [ \fB-b\fR \fIsüperblok\fR ] [ \fB-B\fR \fIblokboyu\fR ] [ \fB-l\fR|\fB-L\fR \fIbozuk_blok_dosyası\fR ] [ \fB-C\fR \fIdt\fR ] [ \fB-j\fR \fIharici_günlük\fR ] [ \fB-E\fR \fIek_seçenekler\fR ] [ \fB-z\fR \fIgerial_dosyası\fR ] \fIaygıt\fR
.sp
.PP
.sp
.SH "AÇIKLAMA"
\fBe2fsck\fR, ext2/ext3/ext4 dosya sistemlerini denetlemek için kullanılır. Günlük kaydı kullanan ext3 ve ext4 dosya sistemleri için, sistem temiz olmayan bir şekilde hatasız olarak kapatılmışsa, normal olarak, günlükte kayıtlı hareketler yeniden yürütüldükten sonra dosya sisteminin temiz olarak işaretlenmesi gerekir. Bu nedenle, günlük kaydı kullanan dosya sistemleri için \fBe2fsck\fR, süper blokta daha fazla denetim gerektiğini belirtilmediği takdirde normal olarak günlüğü yeniden yürütür ve çıkar.
.sp
\fIaygıt\fR, blok aygıtının (örneğin: \fI/dev/sdc1\fR) veya dosya sistemini içeren dosyanın adıdır.
.sp
.TP 4
\fBUyarı:\fR
Genelde \fBe2fsck\fR’yı bağlı dosya sistemlerinde çalıştırmak güvenli değildir. Tek istisna \fB-n\fR seçeneğinin belirtilmesi ve \fB-c\fR, \fB-l\fR veya \fB-L\fR seçeneklerinin belirtilmemesidir. Ancak, bunu yapmak güvenli olsa bile, dosya sistemi bağlanmışsa \fBe2fsck\fR tarafından gösterilen sonuçlar geçerli değildir. \fBe2fsck\fR, bağlı bir dosya sisteminin denetlenmesi gerekip gerekmediğini sorarsa, tek doğru cevap “no/hayır”dır. Ne yaptıklarını gerçekten bilen uzmanlar bile bu soruya başka bir yanıt vermeden önce düşünmelidir.
.sp
.PP
\fBe2fsck\fR etkileşimli kipte çalıştırılırsa (yani \fB-y\fR, \fB-n\fR veya \fB-p\fR seçeneklerinden hiçbiri belirtilmemişse), uygulama kullanıcıdan dosya sisteminde bulunan her sorunu düzeltmesini ister. ’y’ yanıtı hatayı düzeltecektir; ’n’ hatayı düzeltmeden bırakır; ve ’a’ sorunu ve sonraki tüm sorunları çözecektir; Enter tuşuna basmak, soru işaretinden önce yazdırılan öntanımlı yanıtla devam edecektir. Ctrl-C’ye basmak \fBe2fsck\fR’yı hemen sonlandırır.
.sp
.SH "SEÇENEKLER"
.TP 4
\fB-a\fR
\fB-p\fR seçeneği ile aynıdır. Geriye uyumluluk için vardır; mümkün olduğunca \fB–p\fR seçeneğinin kullanılması önerilir.
.sp
.TP 4
\fB-b\fR \fIsüperblok\fR
Birincil süperbloğu kullanmak yerine, \fIsüperblok\fR ile belirtilen başka bir süperbloğu kullanır. Bu seçenek, birincil süperblok bozulduğu durumlarda kullanılır. Yedek süperbloğun yeri, dosya sisteminin blok boyutu, her gruptaki blok sayısı ve \fBsparse_super\fR gibi özellikler ile alakalıdır.
.sp
\fBmke2fs\fR(8) komutunu \fB–n\fR seçeneği ile birlikte kullanılarak, mke2fs’nin dosya sisteminin düzeniyle tutarlı seçeneklerle (dosya sisteminin blok boyutu, her gruptaki blok sayısı, \fBsparse_super\fR gibi) dosya sistemini oluşturduğu varsayımıyla, yedek süperblokların nerelerde bulunduğu öğrenilebilir.
.sp
Şayet bir süperblok tanımlanmış ve dosya sistemi salt okunur açılmamışsa, \fBe2fsck\fR, birincil süperbloğu dosya sisteminin bütünlüğü adına uygun şekilde güncelleyecektir.
.sp
.TP 4
\fB-B\fR \fIblokboyu\fR
Normalde, \fBe2fsck\fR uygun blok boyutunu bulabilmek için değişik blok boyutlarına uyan bir süperblok arar. Bazı durumlarda bu arama iyi sonuç vermez. Bu seçeneği kullanarak, \fBe2fsck\fR’nın sadece belirtilen boyutta arama yapması sağlanır. Şayet süperblok bulunamazsa, \fBe2fsck\fR ölümcül hata vererek sonlanır.
.sp
.TP 4
\fB-c\fR
Bu seçenekle, \fBe2fsck\fR’nın \fBbadblocks\fR(8) uygulamasını çalıştırması sağlanır. \fBbadblocks\fR(8) uygulaması dosya sistemindeki bozuk blokları arar ve bir dosya veya dizin için kullanılmasını engellemek için onları “bozuk/bad” olarak işaretleyip bozuk blok düğümüne ekler. Şayet bu seçenek iki kez belirtilirse, bozuk blok araması verileri bozmayan oku/yaz sınaması kullanılarak yapılır.
.sp
.TP 4
\fB-C\fR \fIdt\fR
Bu seçenek ile \fBe2fsck\fR, denetim sürecinin tamamını, dosya tanımlayıcısı \fIdt\fR ile belirtilen dosyaya yazar ve böylece işlemlerin bitmesinin ardından, bütün süreç tekrar gözden geçirilebilir. Bu seçenek, \fBe2fsck\fR’yi kullanan uygulamalar tarafından sıklıkla kullanılır. \fIdt\fR olarak negatif bir değer belirtilmişse, dosya tanıtıcının mutlak değeri kullanılır ve ilerleme bilgisi başlangıçta gizlenir. Daha sonra \fBe2fsck\fR sürecine \fBSIGUSR1\fR sinyali gönderilerek ilerleme bilgisi etkinleştirilebilir. \fIdt\fR olarak 0 belirtilmişse, \fBe2fsck\fR bir süreç ilerleme çubuğu görüntüleyecek ve işin ne kadarlık kısmının bittiğini bu çubuktan izlemek mümkün olacaktır. Bunun için, \fBe2fsck\fR’nin video konsolu veya uçbirimde çalışıyor olması gerekmektedir.
.sp
.TP 4
\fB-d\fR
Hata ayıklama iletilerini görüntüler (\fBe2fsck\fR içinde hata ayıklaması yapmıyorsanız, kullanışlı değildir).
.sp
.TP 4
\fB-D\fR
Dosya sistemindeki dizinlerde eniyileme yapar. Bu seçenek, \fBe2fsck\fR’nın bütün dizinleri olabilecek en iyi duruma getirmesini sağlar: ya dizini yeniden indisler (dosya sistemi destekliyor ise) ya da yeniden sıralar ve daha küçük bir dizinler halinde ya da geleneksel dosya sistemleri için düz dizin yapısında sıkıştırır.
.sp
\fB-D\fR seçeneği olmasa bile, \fBe2fsck\fR bazen örneğin, dizin indisleme etkinse ve bir dizin indislenmemişse ve indislenmesi yarar sağlayacaksa veya indis yapıları bozulmuşsa ve yeniden oluşturulması gerekiyorsa, birkaç dizini en iyileyebilir. \fB-D\fR seçeneği, dosya sistemindeki tüm dizinleri en iyilenmeye zorlar. Bu bazen onları biraz daha küçük ve arama için biraz daha hızlı hale getirebilir, ancak normalde bu seçenek pek kulanılmaz.
.sp
\fB-D\fR seçeneği, \fBe2fsck\fR’nın başarımı düşürmemek adına normalde zorlanmadığı, tek bir dizindeki yinelenen adlara sahip dizin girdilerini de algılar.
.sp
.TP 4
\fB-E\fR \fIek_seçenekler\fR
\fBe2fsck\fR’nın desteklediği ek seçenekleri belirtmek için kullanılır. Bu seçenekler virgül ile ayrılımış ve “=” işaretini kullanan isim değer çiftlerinden oluşur. Aşağıdaki seçenekler desteklenmektedir:
.sp
.RS
.TP 4
\fBea_ver\fR=\fIek_özellik_sürümü\fR
Bu seçenekle, \fBe2fsck\fR’nın dosya sistemin denetlerken kullandığı ek özellik bloklarının sürüm numarasını belirler. Sürüm numarası 1 veya 2 olabilir. Öntanımlı değer 2’dir.
.sp
.TP 4
\fBjournal_only\fR
Gerekliyse günlük yeniden yürütülür, herhangi bir denetim ve onarım yapılmaz.
.sp
.TP 4
\fBfragcheck\fR
1. geçişte dosya sistemindeki dosyalar için bitişik olmayan blokların ayrıntılı raporunu gösterir.
.sp
.TP 4
\fBdiscard\fR
Tam dosya sistemi denetiminden sonra boş bloklar ve kullanılmayan dosya düğümü bloklarından kurtulmaya çalışır (katı hal aygıtlarında ve seyrek/ince olarak sağlanan depolamada gereksiz bloklardan kurtulmak yararlıdır). Bunun 5. geçişte dosya sistemi tamamen denetlendikten SONRA ve yalnızca tanınabilir hatalar içermeyen bloklar için yapıldığı unutulmamalıdır. Ancak \fBe2fsck\fR’nın bir sorunu tam olarak saptayamadığı durumlar olabilir ve bu durumda bu seçenek daha fazla elle veri kurtarma işleminden de kurtarabilir.
.sp
.TP 4
\fBnodiscard\fR
Boş bloklar ve kullanılmayan dosya düğümü bloklarından kurtulmaya çalışılmaz. \fBdiscard\fR seçeneğinin zıddıdır. Öntanımlı olarak etkindir.
.sp
.TP 4
\fBno_optimize_extents\fR
Gereksiz genişlik veya derinliği ortadan kaldırarak genişletilmiş ağacı en iyilemeyi önermez. Bu, \fI/etc/e2fsck.conf\fR dosyasının seçenekler bölümünden de etkinleştirilebilir.
.sp
.TP 4
\fBoptimize_extents\fR
Gereksiz genişlik veya derinliği ortadan kaldırarak genişletilmiş ağacı en iyilemeyi önerir. \fI/etc/e2fsck.conf\fR dosyasında aksi belirtilmedikçe bu seçenek öntanımlıdır.
.sp
.TP 4
\fBinode_count_fullmap\fR
Çok sayıda sabit bağlı dosya içeren bir dosya sistemini denetlerken hız için belleği kullanarak takaslama yapar. Gereken bellek miktarı, dosya sistemindeki düğüm sayısıyla orantılıdır. Büyük dosya sistemleri için bu, gigabaytlarca bellek anlamına gelebilir. (Örneğin, 2,8 milyar düğüme sahip 40 TB’lık bir dosya sistemi, bu en iyileme etkinleştirilirse ek olarak 5,7 GB bellek tüketecektir.) Bu en iyileme, \fI/etc/e2fsck.conf\fR dosyasının seçenekler bölümünde de etkinleştirilebilir.
.sp
.TP 4
\fBno_inode_count_fullmap\fR
\fBinode_count_fullmap\fR en iyilemesini devre dışı bırakır. \fI/etc/e2fsck.conf\fR dosyasında aksi belirtilmedikçe bu seçenek öntanımlıdır.
.sp
.TP 4
\fBreadahead_kb\fR
\fBe2fsck\fR çalışma zamanını azaltma umuduyla meta verileri önden alacak kadar KiB bellek kullanır. Öntanımlı olarak, bu, iki blok grubunun dosya düğümü tablolarının boyutuna ayarlanır (normal bir ext4 dosya sisteminde genelde 4MiB); bu miktar toplam fiziksel belleğin 1/50’sinden fazlaysa, okuma işlemi devre dışı bırakılır. Okumayı tamamen devre dışı bırakmak için buna sıfır belirtilmelidir.
.sp
.TP 4
\fBbmap2extent\fR
Blok eşlemli dosyaları genişletilmiş eşlemli dosyalara dönüştürür.
.sp
.TP 4
\fBfixes_only\fR
Yalnızca bozuk meta verileri düzelltir. Htree dizinlerini veya sıkıştırılmış genişletilmiş ağaçları en iyilemez. Bu seçenek \fB-D\fR ve \fB-E bmap2extent\fR seçenekleriyle uyumlu değildir.
.sp
.TP 4
\fBcheck_encoding\fR
Harf büyüklüğüne duyarlı olmayan dizinlerde kodlanmış dosya adlarının doğrulanmasını zorlar. Dosya sisteminde katı kip etkinse, bu öntanımlıdır.
.sp
.TP 4
\fBunshare_blocks\fR
Dosya sisteminde, salt okunur özelliği etkin paylaşımlı bloklar varsa, bu, tüm paylaşımlı blokların paylaşımını ve salt okunurluk bitini kaldıracaktır. Yeterli boş alan yoksa işlem başarısız olur. Dosya sistemi salt okunur özellik bitine sahip değilse, ancak yine de paylaşımlı bloklara sahipse, bu seçeneğin hiçbir etkisi olmayacaktır. Bu seçeneği kullanırken, blokları klonlamak için boş alan yoksa, dosyaları silmek için bir istem olmayacağı ve bunun yerine işlemin başarısız olacağı unutulmamalıdır.
.sp
\fBunshare_blocks\fR tüm geçişlerin çalıştırıldığından emin olmak için örtük olarak \fB-f\fR seçeneğinin de uygulanmasını sağlar. Ek olarak, \fB-n\fR seçeneği de belirtilirse, \fBe2fsck\fR, tekilleştirme için yeterli alan ayırmaya çalışmayı taklit eder. Bu başarısız olursa, çıkış kodu sıfırdan farklı olacaktır.
.sp
.PP
.RE
.IP
.sp
.TP 4
\fB-f\fR
Dosya sistemi temiz olsa bile, denetim yapılır.
.sp
.TP 4
\fB-F\fR
Denetime başlamadan önce, dosya sistemi aygıtının tampon önbelleklerini boşaltır. Aslında sadece, \fBe2fsck\fR’nin zamanlama denemeleri için kullanışlıdır.
.sp
.TP 4
\fB-j\fR \fIharici_günlük\fR
Bu dosya sistemi için kayıtların tutulacağı harici günlük dosyasının yeri belirtilir.
.sp
.TP 4
\fB-k\fR
\fB-c\fR seçeneğiyle birlikte kullanıldığında, bozuk bloklar listesindeki mevcut tüm bozuk bloklar korunur ve \fBbadblocks\fR(8) çalıştırılarak bulunan yeni bozuk bloklar da mevcut bozuk bloklar listesine eklenir.
.sp
.TP 4
\fB-l\fR \fIbozuk_blok_dosyası\fR
\fIbozuk_blok_dosyası\fR ile belirtilen dosyada bulunan bozuk blok numaraları listesini, bozuk blokların listesine ekler. Bu dosyanın biçimi, \fBbadblocks\fR(8) ile oluşturulan ile aynıdır. Bu blok numaraları, sadece içinde bulundukları dosya sistemleri için geçerlidir. Çünkü \fBbadblocks\fR(8)’a, kesin ve doğru bir sonuç alabilmek için, dosya sisteminin blok boyunu vermek gerekmektedir. Sonuç olarak, \fBe2fsck\fR ile \fB–c\fR seçeneğini kullanmak çok daha basit ve akıllıca olacaktır. Ancak böylece, \fBbadblocks\fR(8) yazılımına doğru girdilerin geçildiğinden emin olunabilir.
.sp
.TP 4
\fB-L\fR \fIbozuk_blok_dosyası\fR
Bozuk blok listesi olarak \fIbozuk_blok_dosyası\fR ile belirtilen dosyayı kullanır. Bu seçenek aslında, \fB–l\fR seçeneğine benzer, fakat burada bozuk blok listesine yeni bloklar eklenmeden önce eskileri silinir.
.sp
.TP 4
\fB-n\fR
Dosya sistemi salt okunur açılır ve bütün sorulara “no/hayır” cevabının verildiği varsayılır. Böylece \fBe2fsck\fR etkileşimsiz kipte çalıştırılmış olur. Bu seçenek \fB-p\fR ve \fB-y\fR seçenekleriyle birlikte kullanılamaz. (EK BİLGİ: \fB-n\fR seçeneğine ek olarak \fB–c\fR, \fB-l\fR veya \fB–L\fR seçeneği de belirtilirse; dosya sistemi oku-yaz kipinde açılacak ve bozuk blok listesinin güncellenmesi de mümkün olacaktır.)
.sp
.TP 4
\fB-p\fR
Onay beklemeden dosya sistemini düzeltir. Bu seçenek, \fBe2fsck\fR’in insan müdahalesi olmadan güvenli bir şekilde çözülebilecek herhangi bir dosya sistemi sorununu otomatik olarak düzeltmesini sağlar. \fBe2fsck\fR, sistem yöneticisinin ek düzeltici önlem almasını gerektirebilecek bir sorun tespit ederse, \fBe2fsck\fR sorunun bir açıklamasını basar ve ardından çıkış koduna mantıksal olarak veyalanan 4 değeriyle çıkar. (bkz: \fBÇIKIŞ KODLARI\fR bölümü) Bu seçenek normalde sistemin önyükleme betikleri tarafından kullanılır. \fB-n\fR veya \fB-y\fR seçenekleriyle birlikte belirtilemez.
.sp
.TP 4
\fB-r\fR
Aslında bu seçenek hiçbir şey yapmaz, sadece geçmişe uyumluluk adına bulunmaktadır.
.sp
.TP 4
\fB-t\fR
\fBe2fsck\fR için zaman istatiklerini görüntüler. Şayet bu seçenek iki kere kullanılırsa, ek zaman değerleri her geçiş için ayrıca görüntülenir.
.sp
.TP 4
\fB-v\fR
Ayrıntı kipi.
.sp
.TP 4
\fB-V\fR
Sürüm bilgilerini basar ve çıkar.
.sp
.TP 4
\fB-z\fR \fIgerial_dosyası\fR
Bir dosya sistemi bloğunun üzerine yazılmadan önce, bloğun eski içeriği belirtilen \fIgerial_dosyası\fRna yazılır. Bu geri alma dosyası, bir şeyler ters gittiğinde dosya sisteminin eski içeriğini geri yüklemek için \fBe2undo\fR(8) ile birlikte kullanılabilir. Belirtilmediğinde, geri alma dosyası, \fBE2FSPROGS_UNDO_DIR\fR ortam değişkeni ile belirtilen dizinde \fIe2fsck-device.e2undo\fR adlı bir dosyaya yazılır.
.sp
.RS 4
.TP 4
\fBUyarı:\fR
\fIgerial_dosyası\fR güç veya sistem çökmesinden kurtulmak için kullanılamaz.
.sp
.RE
.IP
.sp
.TP 4
\fB-V\fR
Sürüm bilgilerini basar ve çıkar.
.sp
.PP
.sp
.SH "ÇIKIŞ KODLARI"
\fBe2fsck\fR’nin çıkış kodu aşağıdakilerin toplamıdır:
.sp
.RS 4
.nf
  0 - Hata yok
  1 - Dosya sistemi hataları düzeltildi
  2 - Dosya sistemi hataları düzeltildi, sistem yeniden
      başlatılmalı
  4 - Dosya sistemi hataları düzeltilmeden bırakıldı
  8 - İşlemsel hata
 16 - Kullanım veya sözdizimi hatası
 32 - E2fsck kullanıcı tarafından iptal edildi
128 - Paylaşımlı kütüphane hatası
.fi
.sp
.RE
.sp
.SH "SİNYALLER"
\fBe2fsck\fR’ya gönderildiğinde hangi sinyallerin ne etkilere sebep olduğu aşağıda açıklanmıştır:
.sp
.TP 4
\fBSIGUSR1\fR
Bir süreç ilerleme çubuğu görüntülenir veya ilerleme bilgisi çıktılanır. (bkz: \fB-C\fR seçeneği)
.sp
.TP 4
\fBSIGUSR2\fR
Süreç ilerleme çubuğunun görüntülenmesine veya ilerleme bilgisi çıktılanmasına son verilir.
.sp
.PP
.sp
.SH "HATALARIN BİLDİRİLMESİ"
Her yazılımda hatalar olabilir. Şayet \fBe2fsck\fR’nin çökmesine sebep olan bir dosya sistemi veya \fBe2fsck\fR’nin tamir edemediği bir dosya sistemi bulursanız, lütfen yazara bunu bildirin.
.sp
Hata bildirirken mümkün olduğunca fazla bilgi ekleyin. En iyisi, \fBe2fsck\fR’nin hata iletisinin tamamını e-postanıza iliştirin. (e2fsck tarafından basılan iletilerin İngilizce olduğundan emin olun; Sisteminiz \fBe2fsck\fR’nın iletilerini başka bir dile çevrilecek şekilde yapılandırılmışsa, lütfen \fBLC_ALL\fR ortam değişkenine "C" değerini atayın, böylece \fBe2fsck\fR çıktısının dökümü benim için faydalı olacaktır.) Şayet kopyaların saklanabildiği yazılabilir bir dosya sisteminiz varsa, \fBscript\fR(1) komutu \fBe2fsck\fR’nin çıktılarının bir dosyaya yazılabilmesi için en kullanışlı yoldur.
.sp
Ayrıca \fBdumpe2fs\fR(8)’nin çıktılarını göndermek de faydalı olabilir. Şayet özel bir düğüm veya düğümler \fBe2fsck\fR’ya sorun çıkarıyorsa, \fBdebugfs\fR(8)’i kullanmak ve ilgili düğümler hakkındaki raporu da göndermek iyi bir fikir olacaktır. Şayet bu düğüm bir dizin ise, \fBdebugfs dump\fR komutu bu dizin düğümünün içeriğini almanıza yardımcı olur. Daha sonra \fBuuencode\fR(1) komutunu bu çıktı üzerinde çalıştırdıktan sonra bana gönderin. Hatayı yeniden oluşturmaya yardımcı olmak için gönderebileceğiniz en kullanışlı veri, dosya sisteminin \fBe2image\fR(8) kullanılarak oluşturulan sıkıştırılmış ham imge dökümüdür. Daha fazla bilgi için \fBe2image\fR(8) kılavuz sayfasında bulunabilir.
.sp
\fBe2fsck -V\fR çıktısını da eklemeyi unutmayın, böylece hangi sürümü çalıştırdığınızı bilirim.
.sp
.SH "ORTAM DEĞİŞKENLERİ"
.TP 4
\fBE2FSCK_CONFIG\fR
Yapılandırma dosyasının yerini belirtir (bkz: \fBe2fsck.conf\fR(5)).
.sp
.PP
.sp
.SH "YAZAN"
\fBe2fsck\fR’nın bu sürümü Theodore Ts’o tarafından yazılmıştır.
.sp
.SH "İLGİLİ BELGELER"
\fBe2fsck.conf\fR(5), \fBbadblocks\fR(8), \fBdumpe2fs\fR(8), \fBdebugfs\fR(8), \fBe2image\fR(8), \fBmke2fs\fR(8), \fBtune2fs\fR(8).
.sp
.SH "ÇEVİREN"
© 2004 Yalçın Kolukısa
.br
© 2022 Nilgün Belma Bugüner
.br
Bu çeviri özgür yazılımdır: Yasaların izin verdiği ölçüde HİÇBİR GARANTİ YOKTUR.
.br
Lütfen, çeviri ile ilgili bildirimde bulunmak veya çeviri yapmak için https://github.com/TLBP/manpages-tr/issues adresinde "New Issue" düğmesine tıklayıp yeni bir konu açınız ve isteğinizi belirtiniz.
.sp

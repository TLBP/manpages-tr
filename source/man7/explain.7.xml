<?xml version="1.0" encoding="UTF-8"?>
<!-- ********************************************************************
     $Id: explain.7.xml,v 1.8 2002/12/20 22:46:09 nilgun Exp $
     ******************************************************************** -->

<refentry id="tr-man7-explain">
 <refmeta>
  <refentrytitle>EXPLAIN</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo class="header">SQL - Dil Deyimleri</refmiscinfo>
  <refmiscinfo class="domain">PostgreSQL</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>EXPLAIN</refname>
  <refpurpose>bir cümlenin icra planını gösterir</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis><command>EXPLAIN</command> [ <command>ANALYZE</command> ] [ <command>VERBOSE</command> ] <emphasis>cümle</emphasis>
</synopsis>
 </refsynopsisdiv>
 <refsect1><title>Açıklama</title><para>
Bu komut, belirtilen cümle için <productname>PostgreSQL</productname> planlamacısının ürettiği icra planını gösterir. İcra planı cümle tarafından tablolara nasıl başvurulduğunu gösterir. Bu işlem, düz sıralı tarama, indeksli tarama, v.s. şeklinde yapılır. Ayrıca, eğer çok sayıda tabloya başvuruluyorsa, her tablodan gerekli satırların birarada alınması için kullanılacak katılım algoritmasını da gösterir.
  </para><para>
Çıktının en önemli parçası, cümlenin icrasının ne kadar süreceği ile ilgili planlamacının tahminde bulunmasıyla saptanan, tahmini cümle icra maliyetidir (disk sayfası cinsinden ölçülür). Aslında, iki sayı gösterilir: başlangıçtan ilk satır döndürülene kadar geçen süre ve tüm satırlar döndürülünceye kadar geçecek toplam süre. Çoğu sorgu için, toplam süre sorun değildir, ama <command>EXISTS</command>'li bir alt sorgunun varlığı gibi durumlarda planlamacı en küçük  toplam süreye değil en küçük başlangıç zamanına bakacaktır (icracı bir satır döndüğünde duracaktır). Ancak, döndürülecek satır sayısını <command>LIMIT</command> deyimi ile sınırlarsanız, planlamacı en ucuz planlama için bir tahminde bulunabilecektir.
  </para><para>
<command>ANALYZE</command> seçeneği cümlenin planlamasının yapılmasından başka cümlenin çalıştırılmasını da sağlar. Harcanan toplam süre her planlama düğümü için ayrı ayrı gösterilir (milisaniye cinsinden). Ayrıca, dönen satır sayısı da çıktıya eklenir. Bu, planlamacının tahminlerinin tutarlı olup olmadığını görme açısından da yararlıdır.
  </para><para><important><para>
<command>ANALYZE</command> kullanıldığında cümlenin çalıştırılacağını unutmayın. <command>EXPLAIN</command>'de kullanıldığında, bir <command>SELECT</command> cümlesinin döndüreceği çıktı iptal edileceğinden, cümlenin bazı yan etkileri varsa, onları bilemeyeceksiniz. <command>INSERT</command>, <command>UPDATE</command>,
    <command>DELETE</command> veya <command>EXECUTE</command> cümleleri üzerinde <command>EXPLAIN ANALYZE</command> kullanmak ve komutun etkilerinin verinizi etkilememesini isterseniz, şu yaklaşımı kullanabilirsiniz:
   </para><para>
<programlisting indent="4">
BEGIN;
EXPLAIN ANALYZE ...;
ROLLBACK;
</programlisting>
   </para></important>
 </para></refsect1><refsect1><title>Parametreler</title>
  <variablelist><varlistentry>
    <term><command>ANALYZE</command></term>
    <listitem><para>Cümleyi çalıştırır ve gerçek çalışma sürelerini gösterir.
    </para></listitem></varlistentry><varlistentry>
    <term><command>VERBOSE</command></term>
    <listitem><para>Planlama ağacının bir özetini değil dahili gösteriminin tamamını gösterir. Aslında, bu seçenek sadece hata ayıklama amacıyla yararlıdır. <command>VERBOSE</command> çıktısı <literal>explain_pretty_print</literal> yapılandırma değişkeninin değerine bağlı olarak ya cicili bicilidir ya da değildir.
    </para></listitem></varlistentry><varlistentry>
    <term><replaceable>cümle</replaceable></term>
    <listitem><para>İcra planını görmek istediğiniz bir <command>SELECT</command>, <command>INSERT</command>, <command>UPDATE</command>, <command>DELETE</command>, <command>EXECUTE</command> veya <command>DECLARE</command> cümlesi.
    </para></listitem></varlistentry></variablelist>
 </refsect1><refsect1><title>Ek Bilgi</title><para>
Eniyileyici kullanımı hakkında<sbr/><ulink url="http://www.postgresql.org/docs/8.0/static/performance-tips.html#USING-EXPLAIN"/> adresinde daha fazla bilgi bulabilirsiniz.
  </para><para>
PostgreSQL'in sorguları eniyilerken kabul edilebilir kararlar verebilmesi için, <command>ANALYZE</command> komutunun tablo içindeki verilerin istatistiksel dağılımını kaydetmiş olması gerekir. Bu yapılmazsa (ya da tablo içindeki verilerin istatistiksel dağılımı son <command>ANALYZE</command> çağrısından sonra çok fazla değişikliğe uğramışsa), tahmini maliyetler sorgunun gerçek özellikleriyle uyumlu olmayacağı gibi planlamacının ürkütücü bir sorgu planlaması seçimi yapmasına sebep olabilir.
  </para><para>
<productname>PostgreSQL</productname> 7.3 öncesi, sorgu planı bir <command>NOTICE</command> çıktısı biçimindeydi. Şimdi, bir sorgunun sonucu gibi (tek sütunluk bir tablo gösterimi olarak) çıktılanmaktadır.
  </para></refsect1><refsect1><title>Örnekler</title><para>
<type>integer</type> türünde tek bir sütunu olan 10000 satırlık bir tabloya uygulanan basit bir sorgunun planlamasını görmek için:
  </para><para>
<programlisting>EXPLAIN SELECT * FROM foo;

                       QUERY PLAN
---------------------------------------------------------
 Seq Scan on foo  (cost=0.00..155.00 rows=10000 width=4)
(1 row)
</programlisting>
  </para><para>
Eğer bir indeks varsa ve <command>WHERE</command> ile indekslenen bir sorgu kullanırsak, <command>EXPLAIN</command> farklı bir plan gösterebilir:
  </para><para>
<programlisting>EXPLAIN SELECT * FROM foo WHERE i = 4;

                         QUERY PLAN
--------------------------------------------------------------
 Index Scan using fi on foo  (cost=0.00..5.98 rows=1 width=4)
   Index Cond: (i = 4)
(2 rows)
</programlisting>
  </para><para>
Bir ortak değer işlevi kullanılan bir sorgunun sorgu planı:
  </para><para>
<programlisting indent="0">EXPLAIN SELECT sum(i) FROM foo WHERE i &lt; 10;

                             QUERY PLAN
---------------------------------------------------------------------
 Aggregate  (cost=23.93..23.93 rows=1 width=4)
   -&gt;  Index Scan using fi on foo  (cost=0.00..23.92 rows=6 width=4)
         Index Cond: (i &lt; 10)
(3 rows)
</programlisting>
  </para><para>
Bir taslak sorgu hazırlarken bunun icra planını görmek için, <command>EXPLAIN EXECUTE</command> kullanımı örneği:
  </para><para>
<programlisting>PREPARE query(int, int) AS SELECT sum(bar) FROM test
    WHERE id &gt; $1 AND id &lt; $2
    GROUP BY foo;

EXPLAIN ANALYZE EXECUTE query(100, 200);

                QUERY PLAN
----------------------------------------------------------
HashAggregate  (cost=39.53..39.53 rows=1 width=8)
                (actual time=0.661..0.672 rows=7 loops=1)
  -&gt;  Index Scan using test_pkey on test
                (cost=0.00..32.97 rows=1311 width=8)
                (actual time=0.050..0.395 rows=99 loops=1)
        Index Cond: ((id &gt; $1) AND (id &lt; $2))
Total runtime: 0.851 ms
(4 rows)
</programlisting>
  </para><para>
Şüphesiz burada gösterilen değerler işlenen tabloların gerçek içeriğine bağlıdır. Ayrıca, bu değerler ve hatta seçilen sorgu stratejisi, planlamacının sürekli geliştirilmesi sebebiyle, PostgreSQL dağıtımları arasında bile değişiklik gösterebilir. Buna ek olarak, <command>ANALYZE</command> komutu veri istatistiklerini tahmin etmek için rasgele örnekleme yapar; bundan dolayı, tablo verisinde bir değişiklik olmamış bile olsa, taze bir  <command>ANALYZE</command> çağrısından sonra maliyet tahminleri değişiklik gösterebilir.
  </para></refsect1><refsect1><title>Uyumluluk</title><para>
SQL standardında <command>EXPLAIN</command> diye bir deyim yoktur.
  </para></refsect1><refsect1><title>İlgili Belgeler</title><para>
<link linkend="tr-man7-analyze" xreflabel="ANALYZE"/>.
  </para></refsect1><refsect1><title>Çeviren</title><para>
Nilgün Belma Bugüner <email>nilgun@belgeler·gen·tr</email>, Nisan 2005
</para></refsect1>
</refentry>


